{"pages":[{"title":"404","text":"","path":"404/index.html","date":"10-26","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"10-11","excerpt":""},{"title":"关于","text":"&nbsp;&nbsp;&nbsp;&nbsp;本人只是一个即将毕业的程序猿小哥哥，由于秋招结束，闲暇时间搭建了这个平台，只为给自己的生活增添一点乐趣。 &nbsp;&nbsp;&nbsp;&nbsp;本人也是Gakki酱的脑残粉，非常喜欢她的微笑，看了好多她的电视剧，比如：父女七日变、恋空、花水木、逃避虽可耻但有用、Legal High、全开女孩等，欢迎大家关注我的微博，比心~~~ &nbsp;&nbsp;&nbsp;&nbsp;平时喜欢的娱乐是打篮球和逛B站，对二次元有着一定的情怀，B站也给我机会，为了生活放弃了机会，不知道是对还是错，只能一路走到黑了。游戏的话，英雄联盟也陪伴了我的大学生活，现在都不怎么玩了，最多玩玩荣耀和吃鸡，但是还是少了当初那种在网吧5连坐开黑的感觉，我觉得人生最大的乐趣莫过于回忆，等老了，和老伴坐在板凳上面，说着过去的回忆，想想就很幸福。 &nbsp;&nbsp;&nbsp;&nbsp;作为一个程序员对技术不感兴趣，说来也惭愧，平时我也会更新自己的技术博客的，为了生活，不容易，fighting~ &nbsp;&nbsp;&nbsp;&nbsp;最后放一段爱豆的视频让大家欣赏一下，萨拉拉~","path":"about/index.html","date":"10-26","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"10-26","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"10-11","excerpt":""}],"posts":[{"title":"hexo+github搭建个人独立博客","text":"本人程序猿，秋招完事后，闲来无事就想写写自己的奋斗史，本来打算到一些网站上面写自己的博客的，突然觉得，有一个自己的博客岂不是更好，所以寻思自己搭建一个属于自己的博客。 这个教程是基于window系统用户，Hexo3版本 安装前提软件Node.js:作用：node.js用来创建hexo博客框架的，我当前安装版本为：node-v5.6.0-x64 Git客户端:作用：把本地的hexo内容提交到github上去，我当前安装的是Git-2.7.0-64-bit 安装Hexo安装前先介绍几个hexo常用的命令,#后面为注释。 利用 npm 命令即可安装。在任意位置点击鼠标右键，选择Git Base 输入安装hexo命令：1npm install -g hexo 安装完成后，在你喜爱的文件夹下（如E:\\Hexo），执行以下指令(在E:\\Hexo内点击鼠标右键，选择Git Bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。1hexo init 安装依赖包:1npm install 让我们看看刚刚下载的hexo文件带来了什么，在E:\\hexo内执行以下命令：12hexo ghexo s 然后用浏览器访问http://localhost:4000， 此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。轻轻松松就看到了一点成果，是不是很激动，这就是hexo的强大之处，这个本地预览的功能，我真是爱不释手。 注册Github帐号已经有Github帐号跳过此步，首先进入Github进行注册，用户名、邮箱和密码之后都需要用到，自己记好。 创建repositoryrepository相当于一个仓库，用来放置你的代码文件。首先，登陆进入Github，并进入个人页面，选择repositories，然后New一个repository. 创建时，只需要填写Repository name即可，当然这个名字的格式必须为youname.github.io，例如我的为liuzhuo.github.io.这里的用户名是你的登入账号的名字，不然后面会很麻烦！！！ 部署本地文件到github既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑E：\\hexo下的_config.yml文件，建议使用Notepad++。在_config.yml最下方，添加如下配置(命令中的第一个liuzhuo为Github的用户名,第二个liuzhuo为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的),如果配置以下命令出现ERROR Deployer not found : github，则参考上文的解决方法1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:liuzhuo/liuzhuo.github.io.git branch: master 配置_config.yml并保存。如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下:在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。1ls -al ~/.ssh 如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件： 输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车，出现提示让你输入的时候直接先回车，好像需要3次，如下图所示：1ssh-keygen -t rsa -C &quot;43448934832@qq.com&quot; 然后键入以下指令：1ssh-agent -s 继续输入指令：1ssh-add ~/.ssh/id_rsa 输入之后，在我这里是出错了，不知道你的有没有出错。 如果你的也是这样子出错了的话，就输入以下指令：12eval `ssh-agent -s`ssh-add 到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴，不放心的在执行下面命令后，先黏贴在记事本上）：1clip &lt; ~/.ssh/id_rsa.pub 然后到Github里面，点击右上角的设置图标Settings,找到SSH keys,Ttile随便你命名，Key就黏贴上你刚才复制的key,然后点Add SSH key，最后会让你重新输入下gitHub的密码 最后还是测试一下吧，键入以下命令：1ssh -T git@github.com 你可能会看到有警告，没事，输入“yes”就好 以上就表示SSH配置好了，执行以下命令部署到Github上。12hexo ghexo d 如果执行hexo d命令报下名错: 就先安装一下hexo-deployer-git这个模块：1npm install hexo-deployer-git --save 安装好了继续执行 hexo d 部署命令，输入gitHub的账号密码，就可以访问了。我的是：liuzhuo.github.io 发表一篇文章在Git Bash执行命令：1hexo new &quot;my new post&quot; 在E:\\hexo\\source_post中打开my-new-post.md，打开方式使用记事本或者其他文本工具。hexo中写文章使用的是Markdown，这里推荐使用markdownpad这个工具。 Markdown编写语法自己百度一下，不难。本人的另外一个博客上面有用法：https://liuzhuo19940206.github.io/2018/10/12/markdown/ 1234567title: my new post #可以改成中文的，如“新文章”date: 2016-02-21 16:04:09 #发表日期，一般不改动categories: blog #文章文类tags: [文章] #文章标签，多于一项时用这种格式，只有一项时使用tags: blog--这里是正文，用markdown写，你可以选择写一段显示在首页的简介后，加上&lt;!--more--&gt;，在&lt;!--more--&gt;之前的内容会显示在首页，之后的内容会被隐藏，当游客点击Read more 才能看到。 写完文章后，你可以使用1.$ hexo g生成静态文件。2.$ hexo s在本地预览效果。3.hexo d同步到github，然后使用http://liuzhuo.github.io 进行访问。 参考使用Hexo搭建个人博客(基于hexo3.0) HEXO+Github,搭建属于自己的博客","path":"2018/10/27/hexo-github搭建个人独立博客/","date":"10-27","excerpt":"本人程序猿，秋招完事后，闲来无事就想写写自己的奋斗史，本来打算到一些网站上面写自己的博客的，突然觉得，有一个自己的博客岂不是更好，所以寻思自己搭建一个属于自己的博客。"},{"title":"一台电脑使用两个Github账号","text":"起因，主要是作者本人想在github上面部署两个静态博客，可是一个账号只能部署一个，所以只好申请两个账号。 思路管理两个 SHH key 解决方案生成两个SSH key为了举例方便，这里使用“one”和“two”两个账户。下同。123$ ssh-keygen -t rsa -C &quot;one@gmail.com&quot;$ ssh-keygen -t rsa -C &quot;two@gmail.com&quot; 不要一路回车，分别在第一个对话框的时候输入重命名（id_rsa_one和id_rsa_two），这样会生成： id_rsa_oneid_rsa_one.pub id_rsa_twoid_rsa_two.pub 两份包含私钥和公约的4个文件。 ps：ssh-keygen是linux命令，可以让两个机器之间使用ssh而不需要用户名和密码 一定要在~/.ssh路径下运行命令行，不然生成的文件不会出现在当前目录 添加私钥1、打开ssh-agent (1)、如果你是github官方的bash：1$ ssh-agent -s (2)、如果是其他1eval `ssh-agent -s` 注意这里不是单引号，是键盘数值1的左边的按键(在英文模式下)。 2、添加私钥 以前是直接使用：$ ssh-add ~/.ssh/id_rsa（默认的情况下） 现在是： 123$ ssh-add ~/.ssh/id_rsa_one$ ssh-add ~/.ssh/id_rsa_two 可以通过ssh-add -l来确认结果 3、配置.ssh/config 在C:\\Users\\用户名.ssh下。如果没有config文件就创建一个。 1$ touch config 1234567891011121314151617$ vi .ssh/config # 加上以下内容#default githubHost github.com HostName github.com IdentityFile ~/.ssh/id_rsa# one(one@gmail.com)Host one.github.com HostName github.com IdentityFile ~/.ssh/id_rsa_one# two(two@ gmail.com)Host two.github.com HostName github.com IdentityFile ~/.ssh/id_rsa_two 4、这样的话，你就可以通过使用别名github.com、one.github.com、two.github.com来明确说你要是使用哪个SSH key来连接github，即使用工作账号进行操作。 123456#本地建库$ git init$ git commit -am &quot;first commit&apos;#push到github上去$ git remote add origin git@one.github.com:xxxx/test.git$ git push origin master 注意的是：git@后面使用我们指定的别名：github.com、one.github.com、two.github.com 部署SSH key分别登陆两个github账号，进入Personal settings –&gt; SSH and GPG keys： 点击 new SSH key,把在C:\\Users\\用户名.ssh下的两个.pub结尾的文件里面的内容填写到Key里。Title：随便写 远程测试【可跳过】123$ ssh –T one.github.com$ ssh –T two.github.com 使用1、Clone到本地 (1)、原来的写法1$ git clone git@github.com: one的用户名/learngit.git (2)、现在的写法：123$ git clone git@one.github.com: one的用户名/learngit.git$ git clone git@two.github.com: two的用户名/learngit.git 2、记得给这个本地仓库设置局部的用户名和邮箱：123$ git config user.name &quot;one_name&quot; ; git config user.email &quot;one_email&quot;$ git config user.name &quot;two_name&quot; ; git config user.email &quot;two_email&quot; 3、部署成功后，会发现钥匙会由灰色变为绿色。 PS：如果在上面的添加私钥时候。1ssh-add ~/.ssh/id_rsa 输入之后，出现错误的话。错误如下： 使用如下指令：12eval `ssh-agent -s`ssh-add ~/.ssh/id_rsa","path":"2018/10/27/一台电脑使用两个Github账号/","date":"10-27","excerpt":"起因，主要是作者本人想在github上面部署两个静态博客，可是一个账号只能部署一个，所以只好申请两个账号。"}]}